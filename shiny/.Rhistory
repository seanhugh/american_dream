library(stringr)
baseline_estimates <- read_csv("data/table1_national_absmob_by_cohort_parpctile.csv")
simple_plot <- baseline_estimates %>% select(cohort, cohort_mean)
### CHART 1 ###
# Data on income by overall pop
ggplot(simple_plot, aes(x = cohort, y = cohort_mean)) +
geom_line(size = .75) + geom_point(size = 3) +
coord_cartesian(ylim = c(.48, 1.00)) +
scale_y_continuous(labels = scales::percent) +
labs(x = "Child's Year of Birth",
y = "Pct. of Children Earning More than their Parents",
title = "Percent of Children Earning More than Their Parents, by Year of Birth") +
theme_bw() +
theme(axis.title.x = element_text(colour = "#9d9eac"),
axis.title.y = element_text(colour = "#9d9eac"))
# save the data to an RDS file for use in Shiny
write_rds(simple_plot, "./shiny/chart1.rds")
### Chart 2 ###
# Splitting Data up by income bracket: who is making more $$?
# Inspiration from stack overflow
grouped_plot <- baseline_estimates %>%
rowwise %>%
do(as.data.frame(.) %>% {
subs <- select(., abs_mob_pos_par_p1:abs_mob_pos_par_p100)
mutate(., Sum = subs %>% sum,
Mean = subs %>% mean)
} ) %>%
ungroup %>%
mutate(Sum = round(Sum / 100, 3)) %>%
select(cohort, Sum, cohort_mean, par_frac0)
# Plot results to show difference between my sum calc and the overall calc
ggplot(grouped_plot, aes(x = cohort)) +
geom_line(aes(y = cohort_mean), size = .75) +
geom_line(aes(y = Sum), size = .75) +
coord_cartesian(ylim = c(.40, 1.00)) +
scale_y_continuous(labels = scales::percent)
# Plotting all 100 different datasets on 1 graph
# Use the gather() function to tidy data
tidy_data <- baseline_estimates %>%
gather("income_bracket", "probability_exceed", abs_mob_pos_par_p1:abs_mob_pos_par_p100)
# PLOT FOR EACH INDIVIDUAL INCOME BRACKET
# Use ggplot to plot all groups onto a graph
ggplot(tidy_data, aes(x = cohort, y = probability_exceed, group = income_bracket)) +
geom_line(size = .75, alpha = .1) +
geom_point(size = 2, alpha = .1) +
coord_cartesian(ylim = c(.0, 1.00)) +
scale_y_continuous(labels = scales::percent)
# Create a function to get the number from a dataset string
# Turn the income bracket into a number so that it can be
#   easily manipulated
getYear <- function(string){
p <- tail(str_split(string, "_")[[1]], 1)
as.numeric(substring(p, 2))
}
# Use function to assign year data
tidy_data_numeric <- tidy_data %>% rowwise() %>% mutate(income_bracket = getYear(income_bracket))
#%>%mutate(income_bracket = getYear(income_bracket))
# Plot out data using the year to color
ggplot(tidy_data_numeric, aes(x = cohort,
y = probability_exceed,
group = income_bracket,
col = income_bracket)) +
geom_line(size = .75, alpha = .1) +
geom_point(size = 2, alpha = .1) +
coord_cartesian(ylim = c(.0, 1.00)) +
scale_y_continuous(labels = scales::percent) +
scale_color_gradient(low = "green", high = "black")
# Save chart data to RDS file
write_rds(tidy_data_numeric, "./shiny/chart2.rds")
### Chart 3 ###
# Plot key comparisons between income bracket groups
spread_data <- tidy_data_numeric %>% select(cohort, income_bracket, probability_exceed) %>%
spread(key = income_bracket, value = probability_exceed) %>%
mutate(One = `1` - `100`,
Ten = (`1`+`2`+`4`+`5`+`6`+`7`+`8`+`9`+`10`)/10 -
(`91`+`92`+`93`+`94`+`95`+`96`+`97`+`98`+`99`+`100`)/10,
Fifty = (`1`+`2`+`3`+`4`+`5`+`6`+`7`+`8`+`9`+`10`+`11`+`12`+`13`+
`14`+`15`+`16`+`17`+`18`+`19`+`20`+`21`+`22`+`23`+`24`+`25`+
`26`+`27`+`28`+`29`+`30`+`31`+`32`+`33`+`34`+`35`+`36`+`37`+
`38`+`39`+`40`+`41`+`42`+`43`+`44`+`45`+`46`+`47`+`48`+`49`+
`50`)/50 + ( -`51`-`52`-`53`-`54`-`55`-`56`-`57`-`58`-`59`-`60`-`61`-`62`-
`63`-`64`-`65`-`66`-`67`-`68`-`69`-`70`-`71`-`72`-`73`-`74`-`75`-
`76`-`77`-`78`-`79`-`80`-`81`-`82`-`83`-`84`-`85`-`86`-`87`-`88`-
`89`-`90`-`91`-`92`-`93`-`94`-`95`-`96`-`97`-`98`-`99`-`100`)/50) %>%
select(cohort, One:Fifty) %>%
gather("Percentile", "data", One:Fifty)
ggplot(spread_data, aes(x = cohort, y = data, color = Percentile)) +
geom_line(size = 2) +
labs(title = "Disparities Between Percentage Chances of Earning More than Parents",
y = "Dif. between top x percentile and bottom x percentile",
x = "Year")
# Save chart data to RDS file
write_rds(spread_data, "./shiny/chart3.rds")
### Chart 4 ###
inequality_data <- read_csv("data/Income_Inequality/data.csv")
filtered_spread_data <- spread_data %>% filter(Percentile == "Ten") %>%
mutate(year = cohort, percentage = data) %>%
select(year, percentage)
spread_data2 <- left_join(filtered_spread_data, inequality_data, by = "year", suffix = c(".dif", ".inequality"))
spread_data2 %>%
ggplot(aes(x = year)) +
geom_line(aes(y = percentage.dif, colour = "Top vs. Bottom 10% Disparity")) +
geom_line(aes(y = percentage.inequality * 2.5, colour = "Wealth Held by Top 1%")) +
scale_y_continuous(sec.axis = sec_axis(~./2.5, name = "% of Wealth Heald by top 1%")) +
labs(title = "Disparities Between Top and Bottom 10th Percentile vs. Income Inequality",
y = "Dif. between top 10% percentile and bottom 10% percentile",
x = "Year")
# Save chart data to RDS file
write_rds(spread_data2, "./shiny/chart4.rds")
inequality_data2 <- inequality_data %>%
mutate(year = year - 28)
inequality_data2 <- inequality_data %>%
mutate(year = year - 28)
spread_data2 <- left_join(filtered_spread_data, inequality_data2, by = "year", suffix = c(".dif", ".inequality"))
spread_data2 %>%
ggplot(aes(x = year)) +
geom_line(aes(y = percentage.dif, colour = "Top vs. Bottom 10% Disparity")) +
geom_line(aes(y = percentage.inequality * 2.5, colour = "Wealth Held by Top 1%")) +
scale_y_continuous(sec.axis = sec_axis(~./2.5, name = "% of Wealth Heald by top 1%")) +
labs(title = "Disparities Between Top and Bottom 10th Percentile vs. Income Inequality",
y = "Dif. between top 10% percentile and bottom 10% percentile",
x = "Year")
inequality_data2 <- inequality_data %>%
mutate(year = year - 28)
spread_data3 <- left_join(filtered_spread_data, inequality_data2, by = "year", suffix = c(".dif", ".inequality"))
spread_data3 %>%
ggplot(aes(x = year)) +
geom_line(aes(y = percentage.dif, colour = "Top vs. Bottom 10% Disparity")) +
geom_line(aes(y = percentage.inequality * 2.5, colour = "Wealth Held by Top 1%")) +
scale_y_continuous(sec.axis = sec_axis(~./2.5, name = "% of Wealth Heald by top 1%")) +
labs(title = "Disparities Between Top and Bottom 10th Percentile vs. Income Inequality",
y = "Dif. between top 10% percentile and bottom 10% percentile",
x = "Year")
# Save chart data to RDS file
write_rds(spread_data3, "./shiny/chart4.rds")
### Chart 4 ###
inequality_data <- read_csv("data/Income_Inequality/data.csv")
filtered_spread_data <- spread_data %>% filter(Percentile == "Ten") %>%
mutate(year = cohort, percentage = data) %>%
select(year, percentage)
spread_data2 <- left_join(filtered_spread_data, inequality_data, by = "year", suffix = c(".dif", ".inequality"))
spread_data2 %>%
ggplot(aes(x = year)) +
geom_line(aes(y = percentage.dif, colour = "Top vs. Bottom 10% Disparity")) +
geom_line(aes(y = percentage.inequality * 2.5, colour = "Wealth Held by Top 1%")) +
scale_y_continuous(sec.axis = sec_axis(~./2.5, name = "% of Wealth Heald by top 1%")) +
labs(title = "Disparities Between Top and Bottom 10th Percentile vs. Income Inequality",
y = "Dif. between top 10% percentile and bottom 10% percentile",
x = "Year")
# Save chart data to RDS file
write_rds(spread_data2, "./shiny/chart4.rds")
inequality_data2 <- inequality_data %>%
mutate(year = year - 28)
spread_data3 <- left_join(filtered_spread_data, inequality_data2, by = "year", suffix = c(".dif", ".inequality"))
spread_data3 %>%
ggplot(aes(x = year)) +
geom_line(aes(y = percentage.dif, colour = "Top vs. Bottom 10% Disparity")) +
geom_line(aes(y = percentage.inequality * 2.5, colour = "Wealth Held by Top 1%")) +
scale_y_continuous(sec.axis = sec_axis(~./2.5, name = "% of Wealth Heald by top 1%")) +
labs(title = "Disparities Between Top and Bottom 10th Percentile vs. Income Inequality",
y = "Dif. between top 10% percentile and bottom 10% percentile",
x = "Year")
# Save chart data to RDS file
write_rds(spread_data3, "./shiny/chart5.rds")
shiny::runApp('C:/Users/sean/Desktop/gov1005/gov1005_final/shiny')
runApp('C:/Users/sean/Desktop/gov1005/gov1005_final/shiny')
shiny::runApp('C:/Users/sean/Desktop/gov1005/gov1005_final/shiny')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(stringr)
# Data on income by overall pop
ggplot(simple_plot, aes(x = cohort, y = cohort_mean)) +
geom_line(size = .75) + geom_point(size = 3) +
coord_cartesian(ylim = c(.48, 1.00)) +
scale_y_continuous(labels = scales::percent) +
labs(x = "Child's Year of Birth",
y = "Pct. of Children Earning More than their Parents",
title = "Percent of Children Earning More than Their Parents, by Year of Birth") +
theme_bw() +
theme(axis.title.x = element_text(colour = "#9d9eac"),
axis.title.y = element_text(colour = "#9d9eac"))
# Data on income by overall pop
ggplot(simple_plot, aes(x = cohort, y = cohort_mean)) +
geom_line(size = .75) + geom_point(size = 3) +
coord_cartesian(ylim = c(.48, 1.00)) +
scale_y_continuous(labels = scales::percent) +
labs(x = "Child's Year of Birth",
y = "Pct. of Children Earning More than their Parents",
title = "Percent of Children Earning More than Their Parents, by Year of Birth") +
theme_bw() +
theme(axis.title.x = element_text(colour = "#9d9eac"),
axis.title.y = element_text(colour = "#9d9eac"))
# Income Inequality Data
inequality_data
# Data on income by overall pop
ggplot(simple_plot, aes(x = cohort, y = cohort_mean)) +
geom_line(size = .75) + geom_point(size = 3) +
coord_cartesian(ylim = c(.48, 1.00)) +
scale_y_continuous(labels = scales::percent) +
labs(x = "Child's Year of Birth",
y = "Pct. of Children Earning More than their Parents",
title = "Percent of Children Earning More than Their Parents, by Year of Birth") +
theme_bw() +
theme(axis.title.x = element_text(colour = "#9d9eac"),
axis.title.y = element_text(colour = "#9d9eac"))
View(inequality_data2)
# Left Join Data
simple_plot
spread_data3 <- left_join(simple_plot, inequality_data, by = "year", suffix = c(".simple", ".inequality"))
simple_plot
# Left Join Data
simple_plot_new <- simple_plot %>% mutate(year = cohort)
spread_data4 <- left_join(simple_plot, inequality_data, by = "year", suffix = c(".simple", ".inequality"))
# Income Inequality Data
inequality_data
simple_plot
# Left Join Data
simple_plot_new <- simple_plot %>% mutate(year = cohort,
percentage = cohort_mean) %>%
select(year, percentage)
spread_data4 <- left_join(simple_plot_new, inequality_data, by = "year", suffix = c(".simple", ".inequality"))
spread_data4
# Data on income by overall pop
ggplot(simple_plot, aes(x = year)) +
geom_line(aes(y = percentage.dif, colour = "Top vs. Bottom 10% Disparity")) +
geom_line(aes(y = percentage.inequality * 2.5, colour = "Wealth Held by Top 1%")) +
scale_y_continuous(sec.axis = sec_axis(~./2.5, name = "% of Wealth Heald by top 1%")) +
labs(title = "Disparities Between Top and Bottom 10th Percentile vs. Income Inequality",
y = "Dif. between top 10% percentile and bottom 10% percentile",
x = "Year")
# Data on income by overall pop
ggplot(simple_plot, aes(x = year)) +
geom_line(aes(y = percentage.simple, colour = "Pct. of Children Earning More than their Parents")) +
geom_line(aes(y = percentage.inequality * 2.5, colour = "Wealth Held by Top 1%")) +
scale_y_continuous(sec.axis = sec_axis(~./2.5, name = "% of Wealth Heald by top 1%")) +
labs(title = "Disparities Between Top and Bottom 10th Percentile vs. Income Inequality",
y = "Dif. between top 10% percentile and bottom 10% percentile",
x = "Year")
# Data on income by overall pop
ggplot(simple_data4, aes(x = year)) +
geom_line(aes(y = percentage.simple, colour = "Pct. of Children Earning More than their Parents")) +
geom_line(aes(y = percentage.inequality * 2.5, colour = "Wealth Held by Top 1%")) +
scale_y_continuous(sec.axis = sec_axis(~./2.5, name = "% of Wealth Heald by top 1%")) +
labs(title = "Disparities Between Top and Bottom 10th Percentile vs. Income Inequality",
y = "Dif. between top 10% percentile and bottom 10% percentile",
x = "Year")
# Data on income by overall pop
ggplot(spread_data4, aes(x = year)) +
geom_line(aes(y = percentage.simple, colour = "Pct. of Children Earning More than their Parents")) +
geom_line(aes(y = percentage.inequality * 2.5, colour = "Wealth Held by Top 1%")) +
scale_y_continuous(sec.axis = sec_axis(~./2.5, name = "% of Wealth Heald by top 1%")) +
labs(title = "Disparities Between Top and Bottom 10th Percentile vs. Income Inequality",
y = "Dif. between top 10% percentile and bottom 10% percentile",
x = "Year")
# Data on income by overall pop
ggplot(spread_data4, aes(x = year)) +
geom_line(aes(y = percentage.simple, colour = "Pct. of Children Earning More than their Parents")) +
geom_line(aes(y = percentage.inequality * 5, colour = "Wealth Held by Top 1%")) +
scale_y_continuous(sec.axis = sec_axis(~./2.5, name = "% of Wealth Heald by top 1%")) +
labs(title = "Disparities Between Top and Bottom 10th Percentile vs. Income Inequality",
y = "Dif. between top 10% percentile and bottom 10% percentile",
x = "Year")
# Data on income by overall pop
ggplot(spread_data4, aes(x = year)) +
geom_line(aes(y = percentage.simple, colour = "Pct. of Children Earning More than their Parents")) +
geom_line(aes(y = percentage.inequality * 6, colour = "Wealth Held by Top 1%")) +
scale_y_continuous(sec.axis = sec_axis(~./2.5, name = "% of Wealth Heald by top 1%")) +
labs(title = "Disparities Between Top and Bottom 10th Percentile vs. Income Inequality",
y = "Dif. between top 10% percentile and bottom 10% percentile",
x = "Year")
# Data on income by overall pop
ggplot(spread_data4, aes(x = year)) +
geom_line(aes(y = percentage.simple, colour = "Pct. of Children Earning More than their Parents")) +
geom_line(aes(y = percentage.inequality * 6, colour = "Wealth Held by Top 1%")) +
scale_y_continuous(sec.axis = sec_axis(~./6, name = "% of Wealth Heald by top 1%")) +
labs(title = "Disparities Between Top and Bottom 10th Percentile vs. Income Inequality",
y = "Dif. between top 10% percentile and bottom 10% percentile",
x = "Year")
# Data on income by overall pop
ggplot(spread_data4, aes(x = year)) +
geom_line(aes(y = percentage.simple, colour = "Pct. of Children Earning More than their Parents"), size = .75) +
geom_line(aes(y = percentage.inequality * 6, colour = "Wealth Held by Top 1%")) +
scale_y_continuous(sec.axis = sec_axis(~./6, name = "% of Wealth Heald by top 1%")) +
labs(title = "Disparities Between Top and Bottom 10th Percentile vs. Income Inequality",
y = "Dif. between top 10% percentile and bottom 10% percentile",
x = "Year")
# Data on income by overall pop
ggplot(spread_data4, aes(x = year)) +
geom_line(aes(y = percentage.simple, colour = "Pct. of Children Earning More than their Parents"), size = .75) +
geom_point(aes(y = percentage.simple, colour = "Pct. of Children Earning More than their Parents"), size = 3) +
geom_line(aes(y = percentage.inequality * 6, colour = "Wealth Held by Top 1%"), size = .75) +
scale_y_continuous(sec.axis = sec_axis(~./6, name = "% of Wealth Heald by top 1%")) +
labs(title = "Disparities Between Top and Bottom 10th Percentile vs. Income Inequality",
y = "Dif. between top 10% percentile and bottom 10% percentile",
x = "Year")
# Data on income by overall pop
ggplot(spread_data4, aes(x = year)) +
geom_line(aes(y = percentage.simple, colour = "Pct. of Children Earning More than their Parents"), size = .75) +
geom_point(aes(y = percentage.simple, colour = "Pct. of Children Earning More than their Parents"), size = 1) +
geom_line(aes(y = percentage.inequality * 6, colour = "Wealth Held by Top 1%"), size = .75) +
scale_y_continuous(sec.axis = sec_axis(~./6, name = "% of Wealth Heald by top 1%")) +
labs(title = "Disparities Between Top and Bottom 10th Percentile vs. Income Inequality",
y = "Dif. between top 10% percentile and bottom 10% percentile",
x = "Year")
# Data on income by overall pop
ggplot(spread_data4, aes(x = year)) +
geom_line(aes(y = percentage.simple, colour = "Pct. of Children Earning More than their Parents"), size = .75) +
geom_point(aes(y = percentage.simple, colour = "Pct. of Children Earning More than their Parents"), size = 1.5) +
geom_line(aes(y = percentage.inequality * 6, colour = "Wealth Held by Top 1%"), size = .75) +
geom_point(aes(y = percentage.inequality * 6, colour = "Wealth Held by Top 1%"), size = 1.5) +
scale_y_continuous(sec.axis = sec_axis(~./6, name = "% of Wealth Heald by top 1%")) +
labs(title = "Disparities Between Top and Bottom 10th Percentile vs. Income Inequality",
y = "Dif. between top 10% percentile and bottom 10% percentile",
x = "Year")
# Data on income by overall pop
ggplot(spread_data4, aes(x = year)) +
geom_line(aes(y = percentage.simple, colour = "Pct. of Children Earning More than their Parents"), size = .75) +
geom_point(aes(y = percentage.simple, colour = "Pct. of Children Earning More than their Parents"), size = 1.5) +
geom_line(aes(y = percentage.inequality * 6, colour = "Wealth Held by Top 1%"), size = .75) +
geom_point(aes(y = percentage.inequality * 6, colour = "Wealth Held by Top 1%"), size = 1.5) +
scale_y_continuous(sec.axis = sec_axis(~./6, name = "% of Wealth Heald by top 1%")) +
labs(title = "Disparities Between Top and Bottom 10th Percentile vs. Income Inequality",
y = "Dif. between top 10% percentile and bottom 10% percentile",
x = "Year") +
theme(axis.title.x = element_text(colour = "#9d9eac"),
axis.title.y = element_text(colour = "#9d9eac"))
# Data on income by overall pop
ggplot(spread_data4, aes(x = year)) +
geom_line(aes(y = percentage.simple, colour = "Pct. of Children Earning More than their Parents"), size = .75) +
geom_point(aes(y = percentage.simple, colour = "Pct. of Children Earning More than their Parents"), size = 1.5) +
geom_line(aes(y = percentage.inequality * 6, colour = "Wealth Held by Top 1%"), size = .75) +
geom_point(aes(y = percentage.inequality * 6, colour = "Wealth Held by Top 1%"), size = 1.5) +
scale_y_continuous(sec.axis = sec_axis(~./6, name = "% of Wealth Heald by top 1%")) +
labs(title = "Disparities Between Top and Bottom 10th Percentile vs. Income Inequality",
y = "Dif. between top 10% percentile and bottom 10% percentile",
x = "Year") +
theme_bw() +
theme(axis.title.x = element_text(colour = "#9d9eac"),
axis.title.y = element_text(colour = "#9d9eac"))
# Data on income by overall pop
ggplot(spread_data4, aes(x = year)) +
geom_line(aes(y = percentage.simple, colour = "Pct. of Children Earning More than their Parents"), size = .75) +
geom_point(aes(y = percentage.simple, colour = "Pct. of Children Earning More than their Parents"), size = 1.5) +
geom_line(aes(y = percentage.inequality * 6, colour = "Wealth Held by Top 1%"), size = .75) +
geom_point(aes(y = percentage.inequality * 6, colour = "Wealth Held by Top 1%"), size = 1.5) +
scale_y_continuous(sec.axis = sec_axis(~./6, name = "% of Wealth Heald by top 1%")) +
labs(title = "Disparities Between Top and Bottom 10th Percentile vs. Income Inequality",
y = "Dif. between top 10% percentile and bottom 10% percentile",
x = "Year") +
theme_bw() +
theme(axis.title.x = element_text(colour = "#9d9eac"),
axis.title.y = element_text(colour = "#9d9eac")) +
theme(legend.position="bottom")
write_rds(spread_data4, "./shiny/chart6.rds")
runApp('C:/Users/sean/Desktop/gov1005/gov1005_final/shiny')
### CHART 7 ###
spread_data5 <- left_join(simple_plot_new, inequality_data2, by = "year", suffix = c(".simple", ".inequality"))
# Data on income by overall pop
ggplot(spread_data4, aes(x = year)) +
geom_line(aes(y = percentage.simple, colour = "Pct. of Children Earning More than their Parents"), size = .75) +
geom_point(aes(y = percentage.simple, colour = "Pct. of Children Earning More than their Parents"), size = 1.5) +
geom_line(aes(y = percentage.inequality * 6, colour = "Wealth Held by Top 1%"), size = .75) +
geom_point(aes(y = percentage.inequality * 6, colour = "Wealth Held by Top 1%"), size = 1.5) +
scale_y_continuous(sec.axis = sec_axis(~./6, name = "% of Wealth Heald by top 1%")) +
labs(title = "Disparities Between Top and Bottom 10th Percentile vs. Income Inequality",
y = "Dif. between top 10% percentile and bottom 10% percentile",
x = "Year") +
theme_bw() +
theme(axis.title.x = element_text(colour = "#9d9eac"),
axis.title.y = element_text(colour = "#9d9eac")) +
theme(legend.position="bottom")
# Save chart data to RDS file
write_rds(spread_data5, "./shiny/chart7.rds")
# Data on income by overall pop
ggplot(spread_data5, aes(x = year)) +
geom_line(aes(y = percentage.simple, colour = "Pct. of Children Earning More than their Parents"), size = .75) +
geom_point(aes(y = percentage.simple, colour = "Pct. of Children Earning More than their Parents"), size = 1.5) +
geom_line(aes(y = percentage.inequality * 6, colour = "Wealth Held by Top 1%"), size = .75) +
geom_point(aes(y = percentage.inequality * 6, colour = "Wealth Held by Top 1%"), size = 1.5) +
scale_y_continuous(sec.axis = sec_axis(~./6, name = "% of Wealth Heald by top 1%")) +
labs(title = "Disparities Between Top and Bottom 10th Percentile vs. Income Inequality",
y = "Dif. between top 10% percentile and bottom 10% percentile",
x = "Year") +
theme_bw() +
theme(axis.title.x = element_text(colour = "#9d9eac"),
axis.title.y = element_text(colour = "#9d9eac")) +
theme(legend.position="bottom")
write_rds(spread_data5, "./shiny/chart7.rds")
# Data on income by overall pop
ggplot(spread_data5, aes(x = year)) +
geom_line(aes(y = percentage.simple, colour = "Pct. of Children Earning More than their Parents"), size = .75) +
geom_point(aes(y = percentage.simple, colour = "Pct. of Children Earning More than their Parents"), size = 1.5) +
geom_line(aes(y = percentage.inequality * 6, colour = "Wealth Held by Top 1%"), size = .75) +
geom_point(aes(y = percentage.inequality * 6, colour = "Wealth Held by Top 1%"), size = 1.5) +
scale_y_continuous(sec.axis = sec_axis(~./6, name = "% of Wealth Heald by top 1%")) +
labs(title = "Disparities Between Top and Bottom 10th Percentile vs. Income Inequality",
y = "Dif. between top 10% percentile and bottom 10% percentile",
x = "Year") +
theme_bw() +
theme(axis.title.x = element_text(colour = "#9d9eac"),
axis.title.y = element_text(colour = "#9d9eac")) +
theme(legend.position="bottom")
# Data on income by overall pop
ggplot(spread_data5, aes(x = year)) +
geom_line(aes(y = percentage.simple, colour = "Pct. of Children Earning More than their Parents"), size = .75) +
geom_point(aes(y = percentage.simple, colour = "Pct. of Children Earning More than their Parents"), size = 1.5) +
geom_line(aes(y = percentage.inequality * 4, colour = "Wealth Held by Top 1%"), size = .75) +
geom_point(aes(y = percentage.inequality * 4, colour = "Wealth Held by Top 1%"), size = 1.5) +
scale_y_continuous(sec.axis = sec_axis(~./4, name = "% of Wealth Heald by top 1%")) +
labs(title = "Disparities Between Top and Bottom 10th Percentile vs. Income Inequality",
y = "Dif. between top 10% percentile and bottom 10% percentile",
x = "Year") +
theme_bw() +
theme(axis.title.x = element_text(colour = "#9d9eac"),
axis.title.y = element_text(colour = "#9d9eac")) +
theme(legend.position="bottom")
runApp('C:/Users/sean/Desktop/gov1005/gov1005_final/shiny')
library(fiftystater)
library(fiftystater)
install.packages("maps")
install.packages("mapdata")
usa <- map_data("usa")
ggplot() + geom_polygon(data = usa, aes(x=long, y = lat, group = group)) +
coord_fixed(1.3)
usa
ggplot() + geom_polygon(data = usa, aes(x=long, y = lat, group = group, fill = region)) +
coord_fixed(1.3)
states <- map_data("state")
ggplot() + geom_polygon(data = states, aes(x=long, y = lat, group = group, fill = region)) +
coord_fixed(1.3)
ggplot() + geom_polygon(data = states, aes(x=long, y = lat, group = group, fill = region)) +
coord_fixed(1.3) +
guides(fill=FALSE)  # do this to leave off the color legend
ggplot() + geom_polygon(data = states, aes(x=long, y = lat, group = group, fill = region,color = "white")) +
coord_fixed(1.3) +
guides(fill=FALSE)  # do this to leave off the color legend
ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, fill = region, group = group), color = "white") +
coord_fixed(1.3) +
guides(fill=FALSE)  # do this to leave off the color legend
ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, fill = region, group = group), color = "white") +
coord_fixed(1.3) +
guides(fill=FALSE) +
ditch_the_axes
ditch_the_axes <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank()
)
ggplot(data = states) +
geom_polygon(aes(x = long, y = lat, fill = region, group = group), color = "white") +
coord_fixed(1.3) +
guides(fill=FALSE) +
ditch_the_axes
baseline_estimates <- read_csv("state_data.csv")
baseline_estimates <- read_csv("data/state_data.csv")
baseline_estimates
one_year_estimates <- baseline_estimates %>% filter(cohort == 1940)
states
one_year_estimates <- baseline_estimates %>% filter(cohort == 1940)
one_year_estimates
library(abbr2state)
install.packages("abbr2state")
install.packages("abbr2state")
install.packages("openintro")
library(openintro)
one_year_estimates
baseline_estimates <- read_csv("data/state_data.csv") %>%
mutate(state_name = abbr2state(state_name))
baseline_estimates
baseline_estimates <- read_csv("data/state_data.csv") %>%
mutate(tolower(state_name = abbr2state(state_name)))
baseline_estimates <- read_csv("data/state_data.csv") %>%
mutate(toLower(state_name = abbr2state(state_name)))
baseline_estimates <- read_csv("data/state_data.csv") %>%
mutate(state_name = toLower(abbr2state(state_name)))
baseline_estimates <- read_csv("data/state_data.csv") %>%
mutate(state_name = tolower(abbr2state(state_name)))
baseline_estimates
one_year_estimates <- baseline_estimates %>% filter(cohort == 1940)
states
joined_state <- inner_join(states, baseline_estimates, by = "region")
baseline_estimates <- read_csv("data/state_data.csv") %>%
mutate(region = tolower(abbr2state(state_name)))
joined_state <- inner_join(states, baseline_estimates, by = "region")
joined_state
joined_state %>% filter(cohort == 1940) %>%
ggplot() +
geom_polygon(aes(x = long, y = lat, fill = region, group = group), color = "white") +
coord_fixed(1.3) +
guides(fill=FALSE) +
ditch_the_axes
joined_state
joined_state %>% filter(cohort == 1940) %>%
ggplot() +
geom_polygon(aes(x = long, y = lat, fill = cohort_mean, group = group), color = "white") +
coord_fixed(1.3) +
guides(fill=FALSE) +
ditch_the_axes
joined_state %>% filter(cohort == 1940) %>%
ggplot() +
geom_polygon(aes(x = long, y = lat, fill = cohort_mean, group = group), color = "white") +
coord_fixed(1.3) +
ditch_the_axes
write_rds(joined_state, "./shiny/chart8.rds")
runApp('C:/Users/sean/Desktop/gov1005/gov1005_final/shiny')
